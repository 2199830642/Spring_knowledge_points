
    spring基于注解的IOC，以及IOC的案例
        1.Spring中IOC的常用注解
            用于创建对象的注解
                @Component：
                    作用：把当前类对象存入spring容器中
                    属性：value:用于指定bean的id，当不写时，默认值就是当前类名，且首字母改小写
                @Controller:一般用在表现层
                @Service:业务层
                @Repository:持久层
                以上三个注解他们的作用和属性与Component是一摸一样的,
                他们三个是spring框架为我们提供明确的三层使用的注解,使我们的三层对象更加清晰

            用于注入数据的注解
                @Autowired:
                    作用：自动按照类型注入，只要容器中有唯一的一个bean对象类型和要注入的变量类型匹配，就可以注入成功
                            如果IOC容器中没有任何bean的类型和要注入的变量类型匹配，则报错

                    出现位置：
                            可以是成员上，也可以是方法上

                @Qualifier:
                    作用：在按照类注入的基础上再按照名称注入，它在给类成员注入时不能单独使用，但是给方法参数注入时可以
                    属性：value：用于指定注入bean的id

                @Resource:
                    作用：直接按照bean的id注入，它可以独立使用
                    属性：name：用于指定bean的id

                以上三个注解都只能注入其他bean类型的数据，而基本类型和String类型，无法通过以上注解实现
                另外，集合类型的注入只能通过xml来实现

                @Value
                    作用：用于注入基本类型和String类型的数据
                    属性：value：用于指定数据的值，它可以使用spring的SpEl（Spring的EL表达式）
                        SpEl的写法：${表达式}

            用于改变作用范围的
                @Scope
                    作用：用于指定bean的作用范围
                    属性：value：用于指定范围的取值，常用取值：singleton,prototype

            和生命周期相关 了解即可
                @PreDestroy
                    作用：用于指定销毁方法
                @ProConstruct
                    作用：用于指定初始化方法

        2.案例使用xml方式和注解方式实现单表的CRUD操作
            持久层技术选型：dbutils
        3.改造基于注解的IOC案例，使用纯注解的方式实现
            Spring的一些新注解的使用
        4.spring和junit的整合
        